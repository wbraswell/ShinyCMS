---
stages:
  - dist
  - test

.dzil-deps-before-script: &dzil-deps-before-script
  - apt-get update && apt-get install --no-install-recommends -y python3
dzil:
  stage: dist
  tags:
    - docker
  image: perldocker/perl-tester:latest
  before_script:
    - *dzil-deps-before-script
    - dzil authordeps --missing | cpanm -n
    - dzil listdeps             | cpanm -n
  script:
    - dzil build --in _build-dir
  artifacts:
    paths:
      - _build-dir
    expire_in: 1 week

.perl-install-deps: &perl-install-deps-build-dir
  - cpanm --notest --installdeps ./_build-dir/

.tfjunit-before-script: &tfjunit-before-script
  - cpanm -q --notest TAP::Formatter::JUnit
.tfjunit-after-script:  &tjunit-after-script
  - cpanm -q --notest XML::Twig
  -
    perl -MFile::Find -MXML::Twig -e '
      my $dir = shift @ARGV;
      sub add_file_to_junit {
        my ($junit_file, $test_file ) = @_;
        my $twig = XML::Twig->new(
          pretty_print => q{indented},
          twig_handlers => {
            testcase => sub {
              my $elt = $_;
              $elt->set_att( file => $test_file );
              $elt->set_att( name => qq(${test_file} - @{[ $elt->att( name => ) ]})  );
            }
          }
        );
        $twig->parsefile($junit_file);
        $twig->sprint
      }

      my @xmls_to_merge;
      File::Find::find( { wanted => sub {
        -f && /\Q.t.junit.xml\E$/ && do {
          (my $test_file = File::Spec->abs2rel( $_,  $dir )) =~ s/\Q.t.junit.xml\E$/.t/;
          push @xmls_to_merge, add_file_to_junit($_, $test_file);
        }
      }, no_chdir => 1 }, $dir);
      s/<\?xml[^>]+\?>\n//ms for @xmls_to_merge[1..$#xmls_to_merge];
      (my $xml = join q{}, @xmls_to_merge) =~ s,\Q</testsuites>\E(\s|\n)*\Q<testsuites>\E,,g;
      print $xml;
      ' $CI_BUILDS_DIR/_tap > junit.xml
.tfjunit-artifacts:
  artifacts:
    when: always
    reports:
      junit: junit.xml

.linux-image:
  image: library/perl:bullseye
.linux-deps-before-script: &linux-deps-before-script
  - apt-get update && apt-get install --no-install-recommends -y python3

cover:
  extends:
    - .tfjunit-artifacts
    - .linux-image
  stage: test
  tags:
    - docker
  before_script:
    - cpanm -q --notest Devel::Cover
    - *linux-deps-before-script
    - *tfjunit-before-script
    - *perl-install-deps-build-dir
  script:
    - cd _build-dir/ &&
      env
        PERL_TEST_HARNESS_DUMP_TAP=$CI_BUILDS_DIR/_tap
        HARNESS_VERBOSE=1 HARNESS_TIMER=1
        HARNESS_OPTIONS=fTAP-Formatter-JUnit
        HARNESS_PERL_SWITCHES="-MDevel::Cover=-db,$CI_BUILDS_DIR/cover_db,-ignore_re,^t/,-silent,1"
        cover -test
  after_script:
    - *tjunit-after-script

linux:
  extends:
    - .tfjunit-artifacts
    - .linux-image
  stage: test
  tags:
    - docker
  before_script:
    - *linux-deps-before-script
    - *tfjunit-before-script
    - *perl-install-deps-build-dir
  script:
    - PERL_TEST_HARNESS_DUMP_TAP=$CI_BUILDS_DIR/_tap
      HARNESS_VERBOSE=1 HARNESS_TIMER=1
      HARNESS_OPTIONS=fTAP-Formatter-JUnit
      cpanm --verbose --test-only ./_build-dir/
  after_script:
    - *tjunit-after-script

linux-source:
  extends:
    - linux
#  variables:
#    FOO_BAR: 1

.shared_windows_runners:
  tags:
  - shared-windows
  - windows
  - windows-1809


.windows:
  extends:
    - .shared_windows_runners
    - .tfjunit-artifacts
  stage: test
  before_script:
    - choco install -y --allowemptychecksum strawberryperl
    - $env:PATH="C:\strawberry\perl\bin;C:\strawberry\perl\site\bin;C:\strawberry\c\bin;$env:PATH"
    - *tfjunit-before-script
    - *perl-install-deps-build-dir
  script:
    # No subshell support in PowerShell so add environment variable then
    # remove.
    - $env:PERL_TEST_HARNESS_DUMP_TAP="$env:CI_BUILDS_DIR/_tap";
      $env:HARNESS_VERBOSE=1;
      $env:HARNESS_TIMER=1;
      $env:HARNESS_OPTIONS="fTAP-Formatter-JUnit";
    - cpanm --verbose --test-only ./_build-dir/
    - Remove-Item -Path Env:\PERL_TEST_HARNESS_DUMP_TAP;
      Remove-Item -Path Env:\HARNESS_VERBOSE;
      Remove-Item -Path Env:\HARNESS_TIMER;
      Remove-Item -Path Env:\HARNESS_OPTIONS;
  after_script:
    - *tjunit-after-script

.shared_macos_runners:
  tags:
    - shared-macos-amd64
  image: macos-12-xcode-13

# macOS job disabled for now.
# Need to be eligible for macOS SaaS Runner access:
# <https://gitlab.com/gitlab-com/runner-saas-macos-access-requests>.
.macos:
  extends:
    - .shared_macos_runners
    - .tfjunit-artifacts
  stage: test
  before_script:
    - brew install perl
    - *tfjunit-before-script
    - *perl-install-deps-build-dir
  script:
    - PERL_TEST_HARNESS_DUMP_TAP=$CI_BUILDS_DIR/_tap
      HARNESS_VERBOSE=1 HARNESS_TIMER=1
      HARNESS_OPTIONS=fTAP-Formatter-JUnit
      cpanm --verbose --test-only ./_build-dir/
  after_script:
    - *tjunit-after-script
